[gd_resource type="VisualShader" load_steps=13 format=3 uid="uid://df08peckcrogm"]

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_ngsyh"]
parameter_name = "noise_texture"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_yrfe1"]
parameter_name = "threshold"
hint = 1

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_x3yml"]
default_input_values = [0, 0.0, 1, 0.0, 2, 1e-05, 3, Vector3(0, 0, 0), 4, Vector3(1, 1, 1), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_6qfxy"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_peq7j"]
default_input_values = [0, 0.0, 1, 0.0, 2, 1e-05, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(1, 1, 1)]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_mmn0m"]
parameter_name = "Offset"
hint = 1
min = 0.001
max = 0.1
default_value_enabled = true
default_value = 0.025

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_nnqua"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_m2fyy"]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_rch1y"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_788iw"]
parameter_name = "BurnColor"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_7fbuq"]
input_name = "texture"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_1ifk6"]
source = 5

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform sampler2D noise_texture;
uniform float threshold : hint_range(0, 1);
uniform float Offset : hint_range(0.0010000000475, 0.10000000149012) = 0.02500000037253;
uniform vec4 BurnColor : source_color;



void fragment() {
	vec4 n_out8p0;
// Texture2D:8
	n_out8p0 = texture(TEXTURE, UV);


	vec4 n_out17p0;
// Texture2D:17
	n_out17p0 = texture(noise_texture, UV);
	float n_out17p1 = n_out17p0.r;


// FloatParameter:14
	float n_out14p0 = threshold;


	vec3 n_out15p0;
// If:15
	float n_in15p2 = 0.00001;
	vec3 n_in15p3 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in15p4 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_in15p5 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_out17p1 - n_out14p0) < n_in15p2)
	{
		n_out15p0 = n_in15p3;
	}
	else if(n_out17p1 < n_out14p0)
	{
		n_out15p0 = n_in15p5;
	}
	else
	{
		n_out15p0 = n_in15p4;
	}


// FloatParameter:20
	float n_out20p0 = Offset;


// FloatOp:21
	float n_out21p0 = n_out14p0 + n_out20p0;


// ColorParameter:24
	vec4 n_out24p0 = BurnColor;


	vec3 n_out19p0;
// If:19
	float n_in19p2 = 0.00001;
	vec3 n_in19p3 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in19p4 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_out17p1 - n_out21p0) < n_in19p2)
	{
		n_out19p0 = n_in19p3;
	}
	else if(n_out17p1 < n_out21p0)
	{
		n_out19p0 = vec3(n_out24p0.xyz);
	}
	else
	{
		n_out19p0 = n_in19p4;
	}


// VectorOp:22
	vec3 n_out22p0 = n_out15p0 * n_out19p0;


// VectorOp:23
	vec3 n_out23p0 = vec3(n_out8p0.xyz) + n_out22p0;


// Output:0
	COLOR.rgb = n_out23p0;
	COLOR.a = n_out15p0.x;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(2160, -160)
nodes/fragment/7/node = SubResource("VisualShaderNodeInput_7fbuq")
nodes/fragment/7/position = Vector2(-260, -120)
nodes/fragment/8/node = SubResource("VisualShaderNodeTexture_1ifk6")
nodes/fragment/8/position = Vector2(260, -220)
nodes/fragment/13/node = SubResource("VisualShaderNodeTexture2DParameter_ngsyh")
nodes/fragment/13/position = Vector2(-160, 360)
nodes/fragment/14/node = SubResource("VisualShaderNodeFloatParameter_yrfe1")
nodes/fragment/14/position = Vector2(240, 640)
nodes/fragment/15/node = SubResource("VisualShaderNodeIf_x3yml")
nodes/fragment/15/position = Vector2(980, 320)
nodes/fragment/17/node = SubResource("VisualShaderNodeTexture_6qfxy")
nodes/fragment/17/position = Vector2(260, 360)
nodes/fragment/19/node = SubResource("VisualShaderNodeIf_peq7j")
nodes/fragment/19/position = Vector2(1140, 600)
nodes/fragment/20/node = SubResource("VisualShaderNodeFloatParameter_mmn0m")
nodes/fragment/20/position = Vector2(240, 980)
nodes/fragment/21/node = SubResource("VisualShaderNodeFloatOp_nnqua")
nodes/fragment/21/position = Vector2(740, 760)
nodes/fragment/22/node = SubResource("VisualShaderNodeVectorOp_m2fyy")
nodes/fragment/22/position = Vector2(1340, 400)
nodes/fragment/23/node = SubResource("VisualShaderNodeVectorOp_rch1y")
nodes/fragment/23/position = Vector2(1660, -180)
nodes/fragment/24/node = SubResource("VisualShaderNodeColorParameter_788iw")
nodes/fragment/24/position = Vector2(660, 1080)
nodes/fragment/connections = PackedInt32Array(7, 0, 8, 2, 13, 0, 17, 2, 17, 1, 15, 0, 14, 0, 15, 1, 17, 1, 19, 0, 14, 0, 21, 0, 20, 0, 21, 1, 21, 0, 19, 1, 19, 0, 22, 1, 15, 0, 22, 0, 22, 0, 23, 1, 8, 0, 23, 0, 23, 0, 0, 0, 15, 0, 0, 1, 24, 0, 19, 5)
